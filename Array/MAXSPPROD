public class Solution {
    	public static int maxSpecialProduct(ArrayList<Integer> arr) {

		int[] a = new int[arr.size()];

		Stack<Integer> s = new Stack<>();

		for (int i = 0; i < arr.size(); i++) {

			while (!s.isEmpty() && arr.get(s.peek()) < arr.get(i)) {
				a[s.pop()] = i;
			}

			s.push(i);

		}

		int[] b = new int[arr.size()];

		Stack<Integer> s2 = new Stack<>();

		for (int i = arr.size() - 1; i >= 0; i--) {

			while (!s2.isEmpty() && arr.get(s2.peek()) < arr.get(i)) {
				b[s2.pop()] = i;
			}

			s2.push(i);

		}

		long ans = 0;

		int mod = 1000000007;

		for (int i = 0; i < a.length; i++) {
			long val = ((long)a[i] )* b[i];
			ans = Math.max(ans, val);
		}

		return (int) (ans % mod);

	}
}
