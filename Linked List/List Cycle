/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode a) {
        
        if(a==null || a.next==null){
            return null;
        }
        
        ListNode slow=a,fast=a;
        
        do{
            slow=slow.next;
            fast=fast.next.next;
        }while(fast!=null && fast.next!=null && slow!=fast);
        
        
        if(fast==null || fast.next==null)
        return null;
        
        fast=a;
        
        while(slow!=fast){
            slow=slow.next;
            fast=fast.next;
        }
        
        return slow;
        
        
    }
}
