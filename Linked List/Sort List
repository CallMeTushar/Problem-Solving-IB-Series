/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode A) {
        
        if(A==null || A.next==null){
            return A;
        }
        
        
        ListNode slow=A,fast=A.next;
        
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        
        ListNode sn=slow.next;
        slow.next=null;
        
        ListNode fh=sortList(A);
        ListNode sh=sortList(sn);
        
        return mergeTwoLists(fh,sh);
        
    }
    
    public ListNode mergeTwoLists(ListNode A, ListNode B) {
        
        ListNode head=null,tail=null;
        
        while(A!=null && B!=null){
            
            if(A.val<B.val){
                
                ListNode temp=A;
                A=A.next;
                
                if(head==null){
                    head=tail=temp;
                }
                
                else{
                    tail.next=temp;
                    tail=temp;
                }
                
                
            }
            
            
            else{
                ListNode temp=B;
                B=B.next;
                
                if(head==null){
                    head=tail=temp;
                }
                
                else{
                    tail.next=temp;
                    tail=temp;
                }
            }
            
        }
        
        
        if(A==null){
            tail.next=B;
        }
        
        else if(B==null){
            tail.next=A;
        }
        
        
        
        return head;
        
        
        
        
    }
}
