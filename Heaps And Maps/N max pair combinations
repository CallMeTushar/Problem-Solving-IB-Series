public class Solution {
public ArrayList<Integer> solve(ArrayList<Integer> A, ArrayList<Integer> B) {

		PriorityQueue<Integer> pq = new PriorityQueue<Integer>();

		for (int i = 0; i < A.size(); i++) {
			pq.add(Integer.MIN_VALUE);
		}

		Collections.sort(A, Collections.reverseOrder());
		Collections.sort(B, Collections.reverseOrder());

		for (int i = 0; i < A.size(); i++) {
			for (int j = 0; j < A.size(); j++) {
				if (A.get(i) + B.get(j) > pq.peek()) {
					pq.poll();
					pq.add(A.get(i) + B.get(j));
				}

				// sorted in reverse order. Max is not greater => no chance ahead
				else {
					break;
				}
			}
		}

		ArrayList<Integer> ans = new ArrayList<Integer>();

		for (int i = 0; i < A.size(); i++)
			ans.add(-1);

		for (int i = A.size() - 1; i >= 0; i--) {
			ans.set(i, pq.poll());
		}

		return ans;

	}

}
