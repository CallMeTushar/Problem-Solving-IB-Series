public class Solution {
public static int[] equal(int[] arr) {

		HashMap<Integer, ArrayList<Integer>> map = new HashMap<Integer, ArrayList<Integer>>();
		int[] ans = new int[] {};

		for (int i = 0; i < arr.length; i++) {

			for (int j = i + 1; j < arr.length; j++) {

				int sum = arr[i] + arr[j];

				if (map.containsKey(sum)) {

					int[] temp = new int[4];
					temp[2] = i;
					temp[3] = j;
					temp[0] = map.get(sum).get(0);
					temp[1] = map.get(sum).get(1);

					if (dup(temp)) {

						if (ans.length == 0)
							ans = temp;

					else {

							boolean rep = false;
							for (int i1 = 0; i1 < ans.length; i1++) {
	                            if (ans[i1] < temp[i1]) break;
	                            if (ans[i1] > temp[i1]) {
	                                rep = true;
	                                break;
	                            }
	                        }

							if (rep)
								ans = temp;

						}

					}

				}

				else {
					ArrayList<Integer> al = new ArrayList<Integer>();
					al.add(i);
					al.add(j);
					map.put(sum, al);
				}

			}
		}

		return ans;

	}

	private static boolean dup(int[] arr) {
		int[] ans = Arrays.copyOf(arr, arr.length);
		Arrays.sort(ans);
		for (int x = 1; x < ans.length; x++) {
			if (ans[x] == ans[x - 1])
				return false;
		}
		return true;
	}
    
}
