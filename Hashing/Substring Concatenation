public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public static ArrayList<Integer> findSubstring(String str,final List<String> arr) {

		ArrayList<Integer> ans = new ArrayList<Integer>();
		HashMap<String, Integer> map = new HashMap<>();

		for (int i = 0; i < arr.size(); i++)
			map.put(arr.get(i), map.getOrDefault(arr.get(i), 0) + 1);

		int len = arr.size() * arr.get(0).length();

		for (int i = 0; i <= str.length() - len; i++) {

			HashMap<String, Integer> temp = new HashMap<String, Integer>();

			int j = i;
			int c = 0;
			StringBuilder sb = new StringBuilder();
			boolean flag = true;

			while (j < i + len) {

				sb.append(str.charAt(j));
				c++;

				if (c == arr.get(0).length()) {

					if (!map.containsKey(sb.toString())) {
						flag = false;
						break;
					}

					else if (map.get(sb.toString()) - temp.getOrDefault(sb.toString(), 0) == 0) {
						flag = false;
						break;
					}

					temp.put(sb.toString(), temp.getOrDefault(sb.toString(), 0) + 1);

					sb = new StringBuilder();
					c = 0;

				}
				
				j++;

			}

			if (flag)
				ans.add(i);

		}

		return ans;

	}

}
