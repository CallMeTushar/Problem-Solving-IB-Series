public class Solution {
    	public static int wordBreak(String A, ArrayList<String> B) {

		Set<String> s = new HashSet<String>();

		for (int i = 0; i < B.size(); i++)
			s.add(B.get(i));

		int[] dp = new int[A.length()];
		Arrays.fill(dp, -1);

		return wordBreak(0, A, s, dp);

	}

private static int wordBreak(int i, String str, Set<String> s, int[] dp) {

		if (i == str.length()) {
			return 1;
		}

		if (dp[i] != -1)
			return dp[i];

		StringBuilder sb = new StringBuilder();

		int ans = 0;

		for (int j = i; j < str.length(); j++) {

			sb.append(str.charAt(j));
			if (s.contains(sb.toString())) {
				ans = ans + wordBreak(j + 1, str, s, dp);

				if (ans > 0)
					return dp[i] = 1;
			}

		}

		return dp[i] = 0;

	}
}
