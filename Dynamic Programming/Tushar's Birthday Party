public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY

	public static int solve(final int[] friendCap, final int[] dishes, final int[] cost) {

		int max = 0;

		for (int val : friendCap) {
			max = Math.max(val, max);
		}

		int[] dp = new int[max + 1];

		for (int i = dishes.length; i >= 0; i--) {

			for (int cap = 0; cap <= max; cap++) {

				if (cap == 0)
					dp[cap] = 0;

				else if (i == dishes.length) {
					dp[cap] = -1;
				}

				else {

					int inc = -1;

					if (cap - dishes[i] >= 0) {

						inc = dp[cap - dishes[i]];
						if (inc >= 0) {
							inc += cost[i];
						}
					}

					int exc = dp[cap];
					int ans;

					if (inc < 0)
						ans = exc;

					else if (exc < 0)
						ans = inc;

					else
						ans = Math.min(inc, exc);

					dp[cap] = ans;

				}

			}

		}

		int ans = 0;

		for (int i = 0; i < friendCap.length; i++) {
			ans += dp[friendCap[i]];
		}
		
		return ans;

	}
}
